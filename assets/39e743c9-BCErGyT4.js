import{a4 as b,dN as w,cM as h,bD as c,bw as y,bs as s,cu as S,cv as m,bx as x,dP as I,c7 as C,bF as V,d as t,dT as f,as as i,k as u,a0 as d,bN as p,bG as a,bH as o,bI as g,aj as r,dU as $,cD as F,bL as P,dV as v,dW as T,cf as M}from"./index-CyMr76_m.js";import{FormDataPropertyView as D}from"./2606e654-BU0arLul.js";import{getStyle as q,textInputChildren as N,useTextInputProps as k,TextInputBasicSection as E,TextInputInteractionSection as R,TextInputValidationSection as U,inputRefMethods as W,TextInputConfigs as B,fixOldInputCompData as G}from"./6273459c-DX34gMfV.js";const H=b(w)`
  box-shadow: ${e=>{var l,n;return`${(l=e.$style)==null?void 0:l.boxShadow} ${(n=e.$style)==null?void 0:n.boxShadowColor}`}};
  ${e=>e.$style&&q(e.$style)}
`,K={...N,viewRef:h,showCount:c,allowClear:c,style:y(s(S),{background:"transparent"}),labelStyle:s(m),prefixIcon:x,suffixIcon:x,inputFieldStyle:y(s(I),{borderWidth:"1px"}),animationStyle:s(C)};let L=new V(K,e=>{const[l,n]=k(e);return e.label({required:e.required,children:t(H,{...l,ref:e.viewRef,showCount:e.showCount,allowClear:e.allowClear,$style:e.inputFieldStyle,prefix:f(e.prefixIcon)&&e.prefixIcon,suffix:f(e.suffixIcon)&&e.suffixIcon}),style:e.style,labelStyle:e.labelStyle,inputFieldStyle:e.inputFieldStyle,animationStyle:e.animationStyle,...n})}).setPropertyViewFn(e=>i(u,{children:[t(E,{...e}),t(D,{...e}),["layout","both"].includes(d.useContext(p).editorModeStatus)&&e.label.getPropertyView(),["logic","both"].includes(d.useContext(p).editorModeStatus)&&i(u,{children:[t(R,{...e}),t(a,{name:o.layout,children:g(e)}),i(a,{name:o.advanced,children:[e.prefixIcon.propertyView({label:r("button.prefixIcon")}),e.suffixIcon.propertyView({label:r("button.suffixIcon")}),e.showCount.propertyView({label:r("prop.showCount")}),$(e),F(e)]}),t(U,{...e})]}),["layout","both"].includes(d.useContext(p).editorModeStatus)&&i(u,{children:[t(a,{name:o.style,children:e.style.getPropertyView()}),t(a,{name:o.labelStyle,children:e.labelStyle.getPropertyView()}),t(a,{name:o.inputFieldStyle,children:e.inputFieldStyle.getPropertyView()}),t(a,{name:o.animationStyle,hasTooltip:!0,children:e.animationStyle.getPropertyView()})]})]})).setExposeMethodConfigs(W).setExposeStateConfigs([new P("value",r("export.inputValueDesc")),v,T,...B]).build();const Q=M(L,G);export{Q as InputComp};
